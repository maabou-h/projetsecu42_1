---

comment: ''
introduction_md: |
  - Remain polite, courteous, respectful and constructive
  throughout the evaluation process. The well-being of the community
  depends on it.

  - Identify with the person (or the group) evaluated the eventual
  dysfunctions of the work. Take the time to discuss
  and debate the problems you have identified.

  - You must consider that there might be some difference in how your
  peers might have understood the project's instructions and the
  scope of its functionalities. Always keep an open mind and grade
  him/her as honestly as possible. The pedagogy is valid only and
  only if peer-evaluation is conducted seriously.


disclaimer_md: ''

guidelines_md: |
  - Only grade the work that is in the student or group's
  GiT repository.

  - Double-check that the GiT repository belongs to the student
  or the group. Ensure that the work is for the relevant project
  and also check that "git clone" is used in an empty folder.

  - Check carefully that no malicious aliases was used to fool you
  and make you evaluate something other than the content of the
  official repository.

  - To avoid any surprises, carefully check that both the evaluating
  and the evaluated students have reviewed the possible scripts used
  to facilitate the grading.

  - If the evaluating student has not completed that particular
  project yet, it is mandatory for this student to read the
  entire subject prior to starting the defence.

  - Use the flags available on this scale to signal an empty repository,
  non-functioning program, a norm error, cheating etc. In these cases,
  the grading is over and the final grade is 0 (or -42 in case of
  cheating). However, with the exception of cheating, you are
  encouraged to continue to discuss your work (even if you have not
  finished it) in order to identify any issues that may have caused
  this failure and avoid repeating the same mistake in the future.
  
  - Remember that for the duration of the defence, no segfault,
  no other unexpected, premature, uncontrolled or unexpected
  termination of the program, else the final grade is 0. Use the
  appropriate flag. 
  You should never have to edit any file except the configuration file if it exists.
  If you want to edit a file, take the time to explicit the reasons with the 
  evaluated student and make sure both of you are okay with this.

  - You must also verify the absence of memory leaks. Any memory allocated on the heap must
  be properly freed before the end of execution.
  You are allowed to use any of the different tools available on the computer, such as
  leaks, valgrind, or e_fence. In case of memory leaks, tick the appropriate flag.
sections:
- name: Mandatory Part
  description: ''
  questions:
  - name: User permissions check
    guidelines: |
      Run the program as a non-root user, then as root with no arguments.
      - When running as non-root user, the program should exit by telling the user
      that root privileges are required to run. A help menu/usage is appreciated but not
      mandatory in this case.
      - When running as root with no arguments, the program should exit and provide a help menu/usage.

    rating: bool
    kind: standard
    questions_skills:
    - percentage: 0
      name: Network & system administration
    - percentage: 10
      name: Security
    - percentage: 25
      name: Unix

  - name: Spoof between host and guest
    guidelines: |
      Run the program with the following arguments:
      ./ft_malcolm [VM ip] [VM mac] [host IP] [host mac]
      You can get these informations by running the ifconfig command (sudo/root privileges might be needed)
      The program should be waiting for an ARP request before sending a reply and exiting.
      After exiting, if you show the arp table on the host with 'arp -a', the mac address of the first IP should
       be equal to the first MAC provided.
             You can observe this behaviour by listening to ARP traffic on the network:
      'tcpdump -vv -i eth0 arp' (considering the interface is eth0)

    rating: bool
    kind: standard
    questions_skills:
    - percentage: 50
      name: Network & system administration
    - percentage: 40
      name: Security
    - percentage: 5
      name: Unix

  - name: Program behaviour
    guidelines: |
      Run the program with the same arguments as the previous question, but this time, open another
       terminal and listen to the ARP traffic on the network:
      'tcpdump -vv -i eth0 arp' (considering the interface is eth0)

    rating: bool
    kind: standard
    questions_skills:
    - percentage: 50
      name: Network & system administration
    - percentage: 40
      name: Security
    - percentage: 5
      name: Unix